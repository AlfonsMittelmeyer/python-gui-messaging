Toplevel('HelpRelativeAccess',**{'title': 'Relative Access', 'grid_cols': '(8, 75, 0, 0)', 'grid_multi_cols': '[8, (0, 10, 0, 0), (7, 10, 0, 0)]', 'grid_rows': '(31, 10, 0, 0)'})

Label('access_rule',**{'text': 'Access Rule', 'font': 'TkDefaultFont 11 bold', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '24'})
Message('access_rule_bold',**{'text': "Look inside, but don't look outside", 'font': 'TkDefaultFont 9 bold', 'width': '300', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '3', 'sticky': 'nesw', 'columnspan': '4', 'row': '27'})
Message('access_rule_rule',**{'text': 'The general rule is:', 'width': '200', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '2', 'row': '27'})
Message('access_rule_text',**{'text': "The GUI is created from outside to inside and then the way back, adding at last layouts, which depend on the order like pack. After this just before leaving the container widget by goOut() is the right place to add code. What's inside is all created and may be accessed, but what's already created outside isn't defined. Of course direct ancestors are also created.", 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '26'})
Button('close',**{'text': 'Close', 'bd': '2'}).grid(**{'column': '6', 'sticky': 'nesw', 'row': '29'})
Message('container_text',**{'text': 'Accessing widgets in subcontainers may done in two ways: by using the parent and by using the Relative Path Name', 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '16'})
Label('container_title',**{'text': 'Accessing Subcontainers', 'font': 'TkDefaultFont 11 bold', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '14'})
Message('full_path_text',**{'text': 'The syntax is the same as for the:', 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '3', 'row': '22'})
Message('lead_text',**{'text': "When programming in the main script, you access the GUI after it's created. But in a GUI script you access the GUI, while it's created. After the widgets for a container widgets are created and the layout is done in the script, then there is the right place for adding your code. Because you are already in the container widget and because DynTkInter knows about that, the parameter for the parent isn't needed. So just leave it out.", 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '3'})
LinkLabel('link_fullpath',**{'text': 'Full Path Name', 'font': 'TkFixedFont 11 bold underline', 'bg': 'white', 'link': 'guidesigner/Help/AccessToplevelContent.py', 'fg': 'blue', 'anchor': 'w'}).grid(**{'column': '4', 'sticky': 'nesw', 'columnspan': '3', 'row': '22'})
Message('parent_code',**{'text': "myframe = widget('myframe')\nokbutton_inframe = widget(myframe,'okbutton')", 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'fg': 'blue', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '18'})
Message('parent_comment',**{'text': '# using the parent', 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '17'})
Message('relpath_code',**{'text': "myframe = widget('.','myframe','okbutton')", 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'fg': 'blue', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '20'})
Message('relpath_comment',**{'text': '# using the Relative Path Name', 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '19'})
Message('relpath_explenation',**{'text': "The Relative Path Name is a parameter list, beginning with '.'\nWith widget('.') you access the current container widget.", 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '21'})
Label('title',**{'text': 'Relative Access', 'font': 'TkDefaultFont 12 bold', 'bg': 'white', 'fg': 'blue', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '1'})
Message('widget_code',**{'text': "mybutton = widget('mybutton')", 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'fg': 'blue', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '8'})
Message('widget_comment',**{'text': "# addressing a widget just by it's name", 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '7'})
Message('widget_index_code',**{'text': "mybutton2 = widget('mybutton',1)", 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'fg': 'blue', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '12'})
Message('widget_index_comment',**{'text': '# also possible, but not recommended', 'font': 'TkFixedFont 9 bold', 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '11'})
Message('widget_index_text',**{'text': "It's also possible to access widgets by index, if they would have the same name. But it's not recommended the use same names for widgets, for which callbacks shall be defined.", 'width': '500', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '10'})
Label('widget_title',**{'text': 'Omit parent', 'font': 'TkDefaultFont 11 bold', 'bg': 'white', 'anchor': 'w'}).grid(**{'column': '1', 'sticky': 'nesw', 'columnspan': '6', 'row': '5'})

### CODE ===================================================
widget('close').do_command(lambda cont = container(): cont.destroy())
### ========================================================
